using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using arcSpace.Support_Classes;
using arcSpace.Data_Layer;

namespace arcSpace.Business_Layer
{
    public static class Coin_Type_BL
    {
       

       /// <summary>
       /// 
       /// </summary>
       /// <param name="coinType"></param>
       /// <param name="coinTypeDescription"></param>
       /// <returns></returns>
       private static Coin_Type CreateCoinTypeObject(uint coinTypeId, string coinType, string coinTypeDescription)
       {
          Coin_Type objCoinType = (Coin_Type)null;

          if (string.IsNullOrEmpty(coinType) || string.IsNullOrEmpty(coinTypeDescription))
          {
             return objCoinType;
          }

          objCoinType = new Coin_Type();

          objCoinType.Coin_Type_Id = coinTypeId;
          objCoinType.Coin_Type_Name = coinType;
          objCoinType.Coin_Type_Desc = coinTypeDescription;

          return objCoinType;
       }



       public static bool InsertCoinType(Coin_Type objCoinType)
       {
          bool insertSuccessful = false;
          insertSuccessful = Coin_Type_DL.InsertCoinTypeRecord(objCoinType);  
          return insertSuccessful;
       }


       public static bool UpdateCoinType(Coin_Type objCoinType)  // uint coinTypeId, string coinType, string coinTypeDescription
       {
          bool updateSuccessful = false;
/*
          Coin_Type objCoinType = (Coin_Type) null;


          if ((coinTypeId == 0) || string.IsNullOrEmpty(coinType))
          {
             return updateSuccessful;
          }

          if (string.IsNullOrEmpty(coinTypeDescription))
          {
             coinTypeDescription = (string) null;
          }

          objCoinType = CreateCoinTypeObject(coinTypeId, coinType, coinTypeDescription);
*/
          updateSuccessful = Coin_Type_DL.UpdateCoinTypeRecord(objCoinType);

          return updateSuccessful;
       }



       public static bool DeleteCoinType(uint coinTypeId)
       {
          bool deleteSuccessful = false;
          deleteSuccessful = Coin_Type_DL.DeleteCoinTypeRecord(coinTypeId);
          return deleteSuccessful;
       }
    









        /// <summary>
        /// 
        /// </summary>
        /// <returns></returns>
       public static List<Coin_Type> GetCoinTypeList()
       {
          List<Coin_Type> lstCoinType = Data_Layer.Coin_Type_DL.GetCoinTypeRecordList();
          return lstCoinType;
       }


    }
}
